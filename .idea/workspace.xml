<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="2e2b0a6f-bd57-4bc2-bc32-35bcff653a0a" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/database_tools/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/database_tools/session_manager.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/database_tools/setup.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/python_repository/repository.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/conftest.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/databases/config.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/databases/databases.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/implementation/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/implementation/repositories.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/poetry.lock" beforeDir="false" afterPath="$PROJECT_DIR$/poetry.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pyproject.toml" beforeDir="false" afterPath="$PROJECT_DIR$/pyproject.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/python_repository/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/python_repository/__init__.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/python_repository/repository_controller.py" beforeDir="false" afterPath="$PROJECT_DIR$/python_repository/controller.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/python_repository/sqlalchemy_repository.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/python_repository/sqlmodel_repository.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/test_app/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/test_app/model.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/implementation/models.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/test_app/repositories.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/test_sqlmodel_repository.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/test_sqlmodel_repository.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2HJm498aBv4dfTLr91NjG4Ytg3U" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "/Users/yannicschroer/PycharmProjects/sqlmodelRepository/tests/test_app/sqlmodel_implementation",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyIntegratedToolsModulesConfigurable"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tests/test_app/sqlmodel_implementation" />
      <recent name="$PROJECT_DIR$/tests/test_app" />
      <recent name="$PROJECT_DIR$/tests" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/python_repository" />
      <recent name="$PROJECT_DIR$/tests" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/tests/databases" />
      <recent name="$PROJECT_DIR$/tests/implementations" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.Python tests for test_sqlmodel_repository.test_add_pet">
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="sqlmodelRepository" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="repositories" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="sqlmodelRepository" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests/test_app" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/tests/test_app/sqlalchemy_implementation/repositories.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="databases/databases.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="tests/databases/databases.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_sqlmodel_repository.test_add_pet" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="sqlmodelRepository" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_sqlmodel_repository.test_add_pet&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for test_sqlmodel_repository.test_add_pet" />
        <item itemvalue="Docker.databases/databases.yaml: Compose Deployment" />
        <item itemvalue="Python.repositories" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2e2b0a6f-bd57-4bc2-bc32-35bcff653a0a" name="Changes" comment="" />
      <created>1668011366730</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1668011366730</updated>
      <workItem from="1668011369886" duration="7189000" />
      <workItem from="1668025743467" duration="1414000" />
      <workItem from="1668027265606" duration="6864000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/sqlmodelRepository$.coverage" NAME=" Coverage Results" MODIFIED="1668459866976" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/sqlmodelRepository$repositories.coverage" NAME="repositories Coverage Results" MODIFIED="1668025526582" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests/test_app" />
  </component>
</project>